//# Mixins
//
//*


//## Screens
//
//*

//** Down
@mixin screen-xs-max() {
    @media (max-width: screen-down(sm)) {
        @content;
    }
}

@mixin screen-sm-max() {
    @media (max-width: screen-down(md)) {
        @content;
    }
}

@mixin screen-md-max() {
    @media (max-width: screen-down()) {
        @content;
    }
}

@mixin screen-lg-max() {
    @media (max-width: screen-down('xl')) {
        @content;
    }
}

//** Up
@mixin screen-xs() {
    @media (min-width: screen('xs')) {
        @content;
    }
}

@mixin screen-sm() {
    @media (min-width: screen('sm')) {
        @content;
    }
}

@mixin screen-md() {
    @media (min-width: screen('md')) {
        @content;
    }
}

@mixin screen-lg() {
    @media (min-width: screen()) {
        @content;
    }
}

@mixin screen-xl() {
    @media (min-width: screen('xl')) {
        @content;
    }
}

@mixin screen-retina() {
    @media (-webkit-min-device-pixel-ratio: 2), (min-resolution: 192dpi), (min-resolution: 2dppx) {
        @content;
    }
}


//## Graphics
//
//*

//### Filters

@mixin filter($state) {
    @if $state == 'black' {
        filter: brightness(0);
    }

    @if $state == 'white' {
        filter: brightness(0) invert(1);
    }

    @if $state == 'off' {
        filter: none;
    }
}

//### Sizing

@mixin scale-rect($map, $value, $side: 'width') {
    $width: map-get($map, 'width');
    $height: map-get($map, 'height');

    @if $side == 'width' {
        width: round-to($value);
        height: scale-size($map, $value, $side);
    }

    @if $side == 'height' {
        width: scale-size($map, $value, $side);
        height: round-to($value);
    }
}

//### SVG

@mixin svg($map, $el: null) {
    $pseudoEl: map-get($map, 'el');
    @if $el {
        $pseudoEl: $el;
    }
    @if not $pseudoEl {
        $pseudoEl: 'before';
    }

    $size: map-get($map, 'size');
    $width: map-get($map, 'width');
    $height: map-get($map, 'height');

    $scaleSize: map-get($map, 'scaleSize');
    $scaleWidth: map-get($map, 'scaleWidth');
    $scaleHeight: map-get($map, 'scaleHeight');

    @if $size {
        $width: $size;
        $height: $size;
    }

    @if $scaleSize {
        $width: $scaleSize;
        $height: $scaleSize;
    }

    @if $scaleWidth {
        $width: $scaleWidth;
        $height: $scaleHeight;
    }

    &:#{ $pseudoEl } {
        content: '';
        display: block;
        width: $width;
        height: $height;
        background: url(svg-simple($map)) no-repeat 50% 50%;
    }
}


//## Progress
//
//*

// @mixin progress-bar($color) {
//     //** Bar (Box)

//     //*** Firefox/IE10+
//     background: $color;

//     //*** Blink/Webkit/
//     &::-webkit-progress-bar {
//         background: $color;
//     }

//     //*** Firefox
//     &::-moz-progress-bar {
//         background: $color;
//     }
// }

// @mixin progress-value($color) {
//     //** Value (indicator)

//     //*** IE10+
//     color: $color;

//     //*** Blink/Webkit/Firefox
//     &::-webkit-progress-value {
//         background: $color;
//     }
// }
