//# Functions
//
//*


//## Helpers
//
//*

@function digit($value) {
    @return $value / ($value * 0 + 1);
}

@function percentage($value) {
    @return (round(digit($value) * 1000) / 1000) * 100%;
}


//## Media Screens
//
//*

@function screen($key: lg) {
    @return map-get($grid-breakpoints, $key);
}

@function screen-down($key: lg) {
    @return map-get($grid-breakpoints, $key) - 1;
}


//## Type & Grid
//
//*

@function spacer($key: 2) {
    @return map-get($spacers, $key);
}

@function gap($key: 2) {
    @return map-get($gaps, $key);
}

@function box($key: lg) {
    @return map-get($container-max-widths, $key);
}

@function heading($index) {
    @return map-get($headings-font-size, $index);
}


//## Graphics
//
//*

@function svg-url($map, $color) {
    $path: map-get($map, 'path');
    $w: 'auto';
    $h: 'auto';
    $size: map-get($map, 'size');

    @if $size {
        $w: digit($size);
        $h: digit($size);
    } @else {
        $w: digit(map-get($map, 'width'));
        $h: digit(map-get($map, 'height'));
    }

    @return str-replace(url("data:image/svg+xml;charset=utf8,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 #{ $w } #{ $h }'%3E%3Cpath fill='#{ $color }' d='#{ $path }'/%3E%3C/svg%3E"), "#", "%23");
}

@function svg($content, $w, $h) {
    @return str-replace(
        str-replace(
            str-replace(
                "data:image/svg+xml;charset=utf8,<svg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 #{ digit($w) } #{ digit($h) }'>#{ $content }</svg>",
                "#", "%23"
            ),
            ">", "%3E"
        ),
        "<", "%3C"
    );
}
